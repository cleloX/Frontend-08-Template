<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Document</title>
</head>
<body>
  <script>
    // Proxy 对象用于创建一个对象的代理(也就是说要一个新的对象来接收他)，从而实现基本操作的拦截和自定义（如属性查找、赋值、枚举、函数调用等）。
  // const p = new Proxy(target, handler)
  // traps: 提供属性访问的方法。这类似于操作系统中捕获器的概念。
  // target: 被 Proxy 代理虚拟化的对象。它常被作为代理的存储后端。根据目标验证关于对象不可扩展性或不可配置属性的不变量（保持不变的语义）。
  
  let obj = {
    name: 'tz',
    age: 22
  }
  
  let proxy =new Proxy(obj,{
    //参数分别为：监听的对象、键、值
    set(obj, prop, val){
      console.log(obj, prop, val);
      return obj
    }
  })
  
  
  console.log(proxy.a = 45);
  
  </script>
</body>
</html>